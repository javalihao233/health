套餐其实就是检查组的集合，例如有一个套餐为“入职体检套餐”，这个体检套餐可以包括多个检查组：一般检查、血常规、尿常规、肝功三项等。
     所以在添加套餐时需要选择这个套餐包括的检查组.


套餐对应的实体类为Setmeal，对应的数据表为t_setmeal。

套餐和检查组为多对多关系，所以需要中间表t_setmeal_checkgroup进行关联。


删除套餐时：************
    需要先将套餐与检查组中间表删除
    重要：根据最新发现，订单表和套餐表有关联，  套餐订单 ————> 一对多   [按道理来说：一个订单应该阔以有多个订单    因项目规定 一个订单只能包含一个套餐]
        所以：还得删除订单表相关信息的信息


在上传套餐信息时，需要上传一张套餐图片：**************************
       常见的图片存储方案：
       方案一：使用nginx搭建图片服务器
       方案二：使用开源的分布式文件存储系统，例如Fastdfs、HDFS等
       方案三：使用云存储，例如阿里云、七牛云等


       图片存储方案：采用阿里云oss

       存储图片时，要注意上传文件那几个注意事项。
       前端的图片上传控件使用的是elementUI的。


       在新增套餐时套餐的基本信息和图片是分两次提交到后台进行操作的。
       也就是用户首先将图片上传到七牛云服务器，然后再提交新增窗口中录入的其他信息。

              用户在图片控件上传完成后图片名称会保存到redis里面，  采用的是set集合保存。   imgUp_Part
              用户填写完套餐信息时，还会将图片名称做一次上传， 采用的是set集合保存。   imgUp_All

              如果用户只是上传了图片而没有提交录入的其他信息，此时的图片就变为了垃圾图片，因为在数据库中并没有记录它的存在。
              此时我们要如何处理这些拉圾图片呢？
                    采用定时任务组件Quartz！！！！！！
                    使用顶是任务组件  清理redis 和 清理阿里云的垃圾图片
                    --------------根据Redis中保存的两个set集合进行差值计算，获得垃圾图片名称集合    sdiff()

              定时任务组件Quartz：
                    使用步骤：
                          1. 导入依赖
                          2. 自定义一个Job   编写main方法进行测试
                          3. 提供Spring配置文件spring-jobs.xml，配置自定义Job、任务描述、触发器、调度工厂等
                                  cron表达式：在线生成

